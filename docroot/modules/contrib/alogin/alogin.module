<?php

/**
 * @file
 * Contains alogin.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\HtmlCommand;
use Drupal\Core\Ajax\ReplaceCommand;
use Drupal\Core\Ajax\RedirectCommand;
use Drupal\alogin\AuthenticatorService;
use Drupal\Core\TempStore\PrivateTempStoreFactory;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function alogin_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the alogin module.
    case 'help.page.alogin':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Allows users to setup 2FA using Authenticator service.') . '</p>';
      return $output;

    default:
  }
}

function alogin_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'user_login_form') {
    unset($form['#submit'][0]);
    $form['actions']['submit']['#ajax'] = [
      'callback' => 'alogin_ajax_callback',
      'event' => 'click'
    ];
  }
}

function alogin_ajax_callback(&$form, FormStateInterface $form_state) {
  $response = new AjaxResponse();
  if ($form_state->getErrors()) {
    unset($form['#prefix']);
    unset($form['#suffix']);
    $form['status_messages'] = [
      '#type' => 'status_messages',
      '#weight' => -10,
    ];
    $form_state->setRebuild();
    $response->addCommand(new ReplaceCommand('.'.$form['#attributes']['class'][0], $form));
    return $response;
  }
  $account = user_load_by_name($form_state->getValue('name'));
  $tempstorePrivate = \Drupal::service('tempstore.private');
  $tempstorePrivate->get('alogin')->set('uid', $account->id());
  $authenticator = \Drupal::service('alogin.authenticator');
  if ($authenticator->is_enabled($account->id())) {
    $tempstore = \Drupal::service('tempstore.private');
    $tempstore->get('alogin')->set('uid', $account->id());
    $response->addCommand(new RedirectCommand(Url::fromRoute('alogin.two_fa_form')->toString()));
    return $response;
  }
  user_login_finalize($account);
  $response->addCommand(new RedirectCommand(Url::fromRoute('user.page')->toString()));
  return $response;
}
