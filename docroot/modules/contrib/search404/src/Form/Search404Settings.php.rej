--- src/Form/Search404Settings.php
+++ src/Form/Search404Settings.php
@@ -210,25 +210,25 @@ class Search404Settings extends ConfigFormBase {
     if (!empty($form_state->getValue('search404_page_redirect'))) {
       $path = $form_state->getValue('search404_page_redirect');
       if (strpos($path, ' ') === 0) {
-        $form_state->setErrorByName('search404_page_redirect', $this->t('Invalid url : Redirect url should not be a space or not start with a space.'));
+        $form_state->setErrorByName('search404_page_redirect', $this->t('The redirect URL should not be a space, and should not start with a space.'));
       }
       if (strpos($path, '/') !== 0) {
-        $form_state->setErrorByName('search404_page_redirect', $this->t('Invalid url : Redirect url should be start with a slash.'));
+        $form_state->setErrorByName('search404_page_redirect', $this->t('The redirect URL should start with a slash.'));
       }
     }
     // Validation for custom search path.
     if (!empty($form_state->getValue('search404_do_custom_search'))) {
       $custom_path = $form_state->getValue('search404_custom_search_path');
 
-      if (empty(preg_match("/\/@keys$/", $custom_path))) {
-        $form_state->setErrorByName('search404_custom_search_path', $this->t('Custom search path should be ends with search key pattern "/@keys".'));
+      if (empty(preg_match("/\@keys$/", $custom_path))) {
+        $form_state->setErrorByName('search404_custom_search_path', $this->t('Custom search path should end with the following text: @keys'));
       }
       $url_path = explode("@keys", $custom_path);
-      if (!empty(preg_match('/[\'^£!`$%&*()\{}\:.;,\[\]"@#~?><>,|=_+¬-]/', $url_path[0]))) {
-        $form_state->setErrorByName('search404_custom_search_path', t('Custom search path should not contains special characters other than "/"'));
+      if (!empty(preg_match('/[\'^Â£!`$%*()\{}\:.;,\[\]"@#~><>,|+Â¬-]/', $url_path[0]))) {
+        $form_state->setErrorByName('search404_custom_search_path', t('Custom search path should not contain special characters other than "/", "=", "?" and "&".'));
       }
       if (strpos($custom_path, '/') === 0) {
-        $form_state->setErrorByName('search404_custom_search_path', $this->t('Custom search path should not be start with a slash.'));
+        $form_state->setErrorByName('search404_custom_search_path', $this->t('Custom search path should not start with a slash.'));
       }
     }
   }
