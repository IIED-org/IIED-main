---
type: default
team: dit
group: drupal-cloud
service: acquia_search

validate_config: true

environment_image:
  file: ".acquia/Dockerfile.ci"
  context: "."
  build_args:
    - secrets:
        - type: vault
          key: SSH_KEY
          value: GIT_SSH_KEY
          path: secret/pipeline-default/GIT_SSH_KEY

_orca_steps: &orca_steps
  steps:
    - setup_ramfs:
        - cp -ar /acquia /ramfs  &&  df -hT
    - before_install:
        - cd /ramfs${CI_WORKSPACE}
        - ../orca/bin/ci/before_install.sh
    - "PHP version selection":
        - |
          cd /ramfs${CI_WORKSPACE}
          if [ "$JENKINS_PHP_VERSION" = 8.0 ]; then
            update-alternatives --install /usr/local/bin/php php /usr/bin/php8.0 80
            update-alternatives --set php /usr/bin/php8.0

            if [ "$ORCA_COVERAGE_ENABLE" = "TRUE" ]; then
              update-alternatives --install /usr/local/bin/php-config php-config /usr/bin/php-config8.0 80
              update-alternatives --set php-config /usr/bin/php-config8.0
              php-config --version

              update-alternatives --install /usr/local/bin/phpize phpize /usr/bin/phpize8.0 80
              update-alternatives --set phpize /usr/bin/phpize8.0
              phpize --version

              pecl install xdebug

              echo "zend_extension=xdebug" > /etc/php/8.0/cli/conf.d/99-xdebug.ini
              cat /etc/php/8.0/cli/conf.d/99-xdebug.ini
            fi
          fi
          if [ "$JENKINS_PHP_VERSION" = 7.4 ]; then
            update-alternatives --install /usr/local/bin/php php /usr/bin/php7.4 81
            update-alternatives --set php /usr/bin/php7.4

            # ORCA_COVERAGE_ENABLE should not be set true for jobs running on php 7.4 as pecl requires version 8.0 and above.
            # if [ "$ORCA_COVERAGE_ENABLE" = "TRUE" ]; then
            #   update-alternatives --install /usr/local/bin/php-config php-config /usr/bin/php-config8.1 81
            #   update-alternatives --set php-config /usr/bin/php-config8.1
            #   php-config --version
            #
            #   update-alternatives --install /usr/local/bin/phpize phpize /usr/bin/phpize8.1 81
            #   update-alternatives --set phpize /usr/bin/phpize8.1
            #   phpize --version
            #
            #   pecl install xdebug
            #
            #   echo "zend_extension=xdebug" > /etc/php/8.1/cli/conf.d/99-xdebug.ini
            #   cat /etc/php/8.1/cli/conf.d/99-xdebug.ini
            # fi
          fi

          php -v
    - "XDEBUG config":
        - |
          php_version="$(php -r 'echo PHP_VERSION;' | cut -d '.' -f 1,2)"
          if [ "$ORCA_COVERAGE_ENABLE" = "TRUE" ] &&  [ ${php_version} = 8.1 ]; then
              echo xdebug.mode=coverage > /usr/local/etc/php/conf.d/xdebug.ini
          fi

          if [ "$ORCA_COVERAGE_ENABLE" = "FALSE" ]; then
              mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini docker-php-ext-xdebug.ini.back
              mv /usr/local/etc/php/conf.d/xdebug.ini xdebug.ini.back
          fi
    - install:
        - cd /ramfs${CI_WORKSPACE}
        - ../orca/bin/ci/install.sh

    - |
      cd /ramfs${CI_WORKSPACE}
      [ -d "../orca-build" ] && composer config allow-plugins true --working-dir=../orca-build -n || exit 0

    - before_script:
        - cd /ramfs${CI_WORKSPACE}
        - ../orca/bin/ci/before_script.sh
    - script:
        - cd /ramfs${CI_WORKSPACE}
        - ../orca/bin/ci/script.sh
    - "Fix Path":
        - |
          if [ "$ORCA_COVERAGE_ENABLE" = TRUE ]; then
            cd /ramfs${CI_WORKSPACE}
            sed -i 's/\/ramfs//' /acquia/acquia_search/clover.xml
            sed -i 's/\/ramfs//' /acquia/acquia_search/junit.xml
          fi
_orca_job: &orca_job
  <<: *orca_steps
_orca_job_allow_failures: &orca_job_allow_failures
  - ignore_failures: true
    <<: *orca_steps
pre_build:
  static_code_analysis:
    - args: --env ORCA_JOB=STATIC_CODE_ANALYSIS
      <<: *orca_job
  ## Testing OLDEST SUPPORTED on php 7.4, php 8.0 and php 8.1 as this will resolve to D9.
  integrated_test_on_oldest_supported:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_OLDEST_SUPPORTED  --env JENKINS_PHP_VERSION=7.4
      <<: *orca_job
  integrated_test_on_oldest_supported_php8:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_OLDEST_SUPPORTED --env JENKINS_PHP_VERSION=8.0
      <<: *orca_job
  integrated_test_on_oldest_supported_php81:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_OLDEST_SUPPORTED
      <<: *orca_job
  ## Testing Latest LTS on php 7.4 only as most of the time this will resolve to NULL and exit early.
  integrated_test_on_latest_lts:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_LATEST_LTS  --env JENKINS_PHP_VERSION=7.4
      <<: *orca_job
  ## Testing Previous Minor on php 8.1 as this will resolve to D10 as soon as D 10.1 is released.
  integrated_test_on_prev_minor:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_PREVIOUS_MINOR
      <<: *orca_job
  # integrated_test_from_prev_minor:
  #   - args: --env ORCA_JOB=INTEGRATED_UPGRADE_TEST_FROM_PREVIOUS_MINOR
  #     <<: *orca_job
  isolated_test_on_current:
    - args: --env ORCA_JOB=ISOLATED_TEST_ON_CURRENT --env ORCA_COVERAGE_ENABLE=TRUE --env ORCA_COVERAGE_CLOVER=/acquia/acquia_search/clover.xml --env ORCA_JUNIT_LOG=/acquia/acquia_search/junit.xml
      ca_data: /acquia
      <<: *orca_job
  integrated_test_on_current:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_CURRENT
      <<: *orca_job
  # integrated_test_to_next_minor:
  #   - args: --env ORCA_JOB=INTEGRATED_UPGRADE_TEST_TO_NEXT_MINOR
  #     <<: *orca_job
  # integrated_test_to_next_minor_dev:
  #   - args: --env ORCA_JOB=INTEGRATED_UPGRADE_TEST_TO_NEXT_MINOR_DEV
  #     <<: *orca_job
  isolated_test_on_current_dev:
    - args: --env ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV
      <<: *orca_job
  integrated_test_on_current_dev:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_CURRENT_DEV
      <<: *orca_job
  strict_deprecated_code_scan:
    - args: --env ORCA_JOB=STRICT_DEPRECATED_CODE_SCAN
      <<: *orca_job
  isolated_test_on_next_minor:
    - args: --env ORCA_JOB=ISOLATED_TEST_ON_NEXT_MINOR
      <<: *orca_job
  isolated_test_on_next_minor_dev:
    - args: --env ORCA_JOB=ISOLATED_TEST_ON_NEXT_MINOR_DEV
      <<: *orca_job
  integrated_test_on_next_minor:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR
      <<: *orca_job
  integrated_test_on_next_minor_dev:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR_DEV
      <<: *orca_job
  # isolated_test_on_current_php8:
  #   - args: --env ORCA_JOB=ISOLATED_TEST_ON_CURRENT --env JENKINS_PHP_VERSION=8.0
  #     <<: *orca_job
  deprecated_code_scan_with_contrib:
    - args: --env ORCA_JOB=DEPRECATED_CODE_SCAN_W_CONTRIB
      <<: *orca_job
  loose_deprecated_code_scan:
    - args: --env ORCA_JOB=LOOSE_DEPRECATED_CODE_SCAN
      <<: *orca_job
  # isolated_test_on_next_major_latest_minor_beta_later:
  #   - args: --env ORCA_JOB=ISOLATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_BETA_OR_LATER
  #     <<: *orca_job
  # integrated_test_on_next_major_latest_minor_beta_later:
  #   - args: --env ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_BETA_OR_LATER
  #     <<: *orca_job
  # isolated_test_on_next_major_latest_minor_dev:
  #   - args: --env ORCA_JOB=ISOLATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV
  #     <<: *orca_job
  # integrated_test_on_next_major_latest_minor_dev:
  #   - args: --env ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV
  #     <<: *orca_job
  # isolated_upgrade_test_to_next_major_dev:
  #   - args: --env ORCA_JOB=ISOLATED_UPGRADE_TEST_TO_NEXT_MAJOR_DEV
  #     <<: *orca_job
  # isolated_upgrade_test_to_next_major_beta_later:
  #   - args: --env ORCA_JOB=ISOLATED_UPGRADE_TEST_TO_NEXT_MAJOR_BETA_OR_LATER
  #     <<: *orca_job


  security_composition_analysis:
    required: false

  code_analysis:
    required: true
    project_key: acquia.drupal-cloud.dit:acquia_search
    quality_gate:
      wait_for_quality_gate: false
      max_time_limit: 2
      abort_pipeline: false

#notify:
#  channel: drupal-integration-eng
#  on_success: change
#  on_failure: always
