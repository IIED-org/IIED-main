<?php

/**
 * @file
 * Install, update, and uninstall functions for the Acquia Search Solr module.
 */

use Drupal\acquia_connector\Subscription;
use Drupal\acquia_search\Helper\Messages;
use Drupal\acquia_search\Helper\Runtime;
use Drupal\acquia_search\Plugin\search_api\backend\AcquiaSearchSolrBackend;
use Drupal\search_api\Entity\Server;
use Drupal\search_api\ServerInterface;

/**
 * Implements hook_requirements().
 */
function acquia_search_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    if (!\Drupal::moduleHandler()->moduleExists('acquia_connector') || !class_exists(Subscription::class)) {
      $requirements['acquia_search_requirements'] = [
        'title' => t('Acquia Search'),
        'value' => t('Requirements Missing: acquia_connector'),
        'severity' => REQUIREMENT_ERROR,
        'description' => ['#markup' => t('Acquia connector 4.x is required for Acquia Search 3.1.0 and above.')],
      ];
      return $requirements;
    }

    $deprecated = \Drupal::configFactory()->get('acquia_search.settings')->get('override_search_core') || \Drupal::configFactory()->get('acquia_search_solr.settings')->get('override_search_core');
    if ($deprecated) {
      $requirements['acquia_search_deprecated_config'] = [
        'title' => t('Acquia Search Local Overrides'),
        'value' => 'Local overrides',
        'description' => t("Acquia Search detected deprecated config settings. Please review README.txt and update 'override_search_core' setting to override."),
        'severity' => REQUIREMENT_WARNING,
      ];
    }

    $requirements['acquia_search_ssl'] = [
      'title' => t('Acquia Search Solr'),
      'value' => 'Security',
    ];
    // Check SSL support.
    if (in_array('ssl', stream_get_transports(), TRUE)) {
      $requirements['acquia_search_ssl']['severity'] = REQUIREMENT_OK;
      $requirements['acquia_search_ssl']['description'] = t('The Acquia Search module is using SSL to protect the privacy of your content.');
    }
    else {
      $requirements['acquia_search_ssl']['severity'] = REQUIREMENT_WARNING;
      $requirements['acquia_search_ssl']['description'] = t('In order to protect the privacy of your content with the Acquia Search module you must have SSL support enabled in PHP on your host.');
    }

    /** @var \Drupal\search_api\ServerInterface[] $servers */
    $servers = Server::loadMultiple();

    $acquia_servers = array_filter($servers, static function (ServerInterface $server) {
      return Runtime::isAcquiaServer($server);
    });

    // Show available Acquia Search Solr indexes.
    foreach ($acquia_servers as $server_id => $server) {
      $backend = $server->getBackend();
      $requirements['acquia_search_status_' . $server_id] = [
        'title' => t('Acquia Search connection status'),
        'severity' => REQUIREMENT_OK,
        'description' => ['#markup' => Messages::getSearchStatusMessage($server->getBackend())],
      ];
      if ($backend instanceof AcquiaSearchSolrBackend && !$backend->isPreferredCoreAvailable()) {
        $requirements['acquia_search_status_' . $server_id]['severity'] = REQUIREMENT_ERROR;
        $requirements['acquia_search_status_' . $server_id]['description'] = ['#markup' => Messages::getNoPreferredCoreError($backend)];
      }
    }

    // Flag when read-only mode was forced because of not finding the right
    // index.
    if (Runtime::shouldEnforceReadOnlyMode()) {
      $requirements['acquia_search_read_only'] = [
        'title' => t('Acquia Search Solr'),
        'value' => t('Read-only warning'),
        'severity' => REQUIREMENT_WARNING,
        'description' => ['#markup' => Messages::getReadOnlyModeWarning()],
      ];
    }

  }

  return $requirements;
}

/**
 * Enable the acquia_connector module.
 */
function acquia_search_update_8310() {
  \Drupal::service('module_installer')->install(['acquia_connector']);
}
