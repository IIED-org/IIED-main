<?php

/**
 * @file
 * Install, update, and uninstall functions for the Acquia Search Solr module.
 */

use Drupal\acquia_connector\Subscription;
use Drupal\acquia_search\Helper\Messages;
use Drupal\acquia_search\Helper\Runtime;
use Drupal\search_api\Entity\Server;
use Drupal\search_api\ServerInterface;

/**
 * Implements hook_requirements().
 */
function acquia_search_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    if (!\Drupal::moduleHandler()->moduleExists('acquia_connector') || !class_exists(Subscription::class)) {
      $requirements['acquia_search_requirements'] = [
        'title' => t('Acquia Search'),
        'value' => t('Requirements Missing: acquia_connector'),
        'severity' => REQUIREMENT_ERROR,
        'description' => ['#markup' => t('Acquia connector 4.x is required for Acquia Search 3.1.0 and above.')],
      ];
      return $requirements;
    }
    $requirements['acquia_search_ssl'] = [
      'title' => t('Acquia Search Solr'),
      'value' => 'Security',
    ];
    // Check SSL support.
    if (in_array('ssl', stream_get_transports(), TRUE)) {
      $requirements['acquia_search_ssl']['severity'] = REQUIREMENT_OK;
      $requirements['acquia_search_ssl']['description'] = t('The Acquia Search module is using SSL to protect the privacy of your content.');
    }
    else {
      $requirements['acquia_search_ssl']['severity'] = REQUIREMENT_WARNING;
      $requirements['acquia_search_ssl']['description'] = t('In order to protect the privacy of your content with the Acquia Search module you must have SSL support enabled in PHP on your host.');
    }

    /** @var \Drupal\search_api\ServerInterface[] $servers */
    $servers = Server::loadMultiple();

    $acquia_servers = array_filter($servers, static function (ServerInterface $server) {
      return Runtime::isAcquiaServer($server);
    });

    // Show available Acquia Search Solr indexes.
    foreach ($acquia_servers as $server_id => $server) {
      $requirements['acquia_search_status_' . $server_id] = [
        'title' => t('Acquia Search connection status'),
        'severity' => REQUIREMENT_OK,
        'description' => ['#markup' => Messages::getSearchStatusMessage($server)],
      ];
    }

    // Flag when read-only mode was forced because of not finding the right
    // index.
    if (Runtime::shouldEnforceReadOnlyMode()) {
      $requirements['acquia_search_read_only'] = [
        'title' => t('Acquia Search Solr'),
        'value' => t('Read-only warning'),
        'severity' => REQUIREMENT_WARNING,
        'description' => ['#markup' => Messages::getReadOnlyModeWarning()],
      ];
    }

    if (!\Drupal::service('acquia_search.preferred_core')->isPreferredCoreAvailable()) {
      $requirements['acquia_search_read_only'] = [
        'title' => t('Acquia Search Solr'),
        'value' => t('No preferred search core'),
        'severity' => REQUIREMENT_ERROR,
        'description' => ['#markup' => Messages::getNoPreferredCoreError()],
      ];
    }

  }

  return $requirements;
}

/**
 * Implements hook_install().
 */
function acquia_search_install() {
  // Indicate that default index needs to be re-connected to the server.
  \Drupal::state()->set('acquia_search.connect_index', TRUE);
}

/**
 * Enable the acquia_connector module.
 */
function acquia_search_update_8310() {
  \Drupal::service('module_installer')->install(['acquia_connector']);
}
