<?php

/**
 * @file
 * Facets Pretty Paths module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\facets_exposed_filters\Plugin\views\filter\FacetsFilter;

/**
 * Implements hook_config_schema_info_alter().
 */
function facets_pretty_paths_config_schema_info_alter(&$definitions) {
  if (isset($definitions['views_filter']['mapping']['expose']['mapping'])) {
    $definitions['views_filter']['mapping']['expose']['mapping']['facets_pretty_paths_coder'] = [
      'type' => 'string',
      'label' => 'The coder plugin ID',
    ];
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function facets_pretty_paths_form_views_ui_config_item_form_alter(&$form, FormStateInterface $form_state) {
  // Add coder options into the exposed filter config form for views facets
  // exposed filters.
  $type = $form_state->get('type');
  $handler = $form_state->get('handler');
  if ($type === 'filter' && $handler instanceof FacetsFilter) {
    /** @var \Drupal\facets_pretty_paths\Coder\CoderPluginManager $pretty_paths_coder_manager */
    $pretty_paths_coder_manager = \Drupal::service('plugin.manager.facets_pretty_paths.coder');
    $coders = [0 => t('None')];
    $coder_descriptions = [0 => t('Do not use a pretty paths coder (use the default views query string), e.g. ?color=<strong>2</strong>')];
    foreach ($pretty_paths_coder_manager->getDefinitions() as $coder_id => $definition) {
      $coders[$definition['id']] = !empty($definition['label']) ? $definition['label'] : $coder_id;
      $coder_descriptions[$definition['id']] = $definition['description'] ?? '';
    }
    $form['options']['expose']['facets_pretty_paths_coder'] = [
      '#type' => 'radios',
      '#title' => t('Pretty paths coder'),
      '#options' => $coders,
      '#required' => FALSE,
      '#default_value' => $handler->options['expose']['facets_pretty_paths_coder'] ?? 0,
    ];

    foreach ($coder_descriptions as $coder_id => $coder_description) {
      $form['options']['expose']['facets_pretty_paths_coder'][$coder_id]['#description'] = str_replace('color', $handler->options['expose']['identifier'], $coder_description);
    }

    // Add our custom submit handler to run before the default.
    array_unshift($form['actions']['submit']['#submit'], '_facets_pretty_paths_handler_edit_form_submit');
  }
}

/**
 * Custom submit handler for the views_ui_config_item_form form.
 *
 * @param array $form
 *   The views_ui_config_item_form form for a facets exposed filter.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 */
function _facets_pretty_paths_handler_edit_form_submit(&$form, FormStateInterface $form_state) {
  // Store coder choice into the handler (views does not automatically do this).
  $handler = $form_state->get('handler');
  if ($value = $form_state->getValue(['options', 'expose', 'facets_pretty_paths_coder'])) {
    // A pretty paths coder was chosen.
    $handler->options['expose']['facets_pretty_paths_coder'] = $value;
  }
  elseif (isset($handler->options['expose']['facets_pretty_paths_coder'])) {
    // The "None" option was chosen.
    unset($handler->options['expose']['facets_pretty_paths_coder']);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function facets_pretty_paths_form_facets_facet_edit_form_alter(&$form, FormStateInterface $form_state) {

  // Load the facet and facet source configuration.
  $facet = \Drupal::routeMatch()->getParameter('facets_facet');
  $facetsource_config = $facet->getFacetSourceConfig();

  // Only alter form when pretty paths is active.
  if ($facetsource_config->getUrlProcessorName() == 'facets_pretty_paths') {

    /** @var \Drupal\facets_pretty_paths\Coder\CoderPluginManager $pretty_paths_coder_manager */
    $pretty_paths_coder_manager = \Drupal::service('plugin.manager.facets_pretty_paths.coder');
    $coders = [];
    $coder_descriptions = [];
    foreach ($pretty_paths_coder_manager->getDefinitions() as $coder_id => $definition) {
      $coders[$definition['id']] = !empty($definition['label']) ? $definition['label'] : $coder_id;
      $coder_descriptions[$definition['id']] = !empty($definition['description']) ? $definition['description'] : '';
    }
    $form['facet_settings']['facets_pretty_paths_coder'] = [
      '#type' => 'radios',
      '#title' => t('Pretty paths coder'),
      '#options' => $coders,
      '#default_value' => $facet->getThirdPartySetting('facets_pretty_paths', 'coder', 'default_coder'),
    ];

    foreach ($coder_descriptions as $coder_id => $coder_description) {
      $form['facet_settings']['facets_pretty_paths_coder'][$coder_id]['#description'] = $coder_description;
    }

    // We need to add our custom submit handler before the defaults. If we
    // trigger after the defaults, $facet->save() will break the entity form.
    array_unshift($form['actions']['submit']['#submit'], "facets_pretty_paths_facet_edit_form_submit");
  }
}

/**
 * Custom submit handler which saves the selected coder for a given facet.
 */
function facets_pretty_paths_facet_edit_form_submit(&$form, FormStateInterface $form_state) {
  $coder = $form_state->getValue(['facet_settings', 'facets_pretty_paths_coder']);
  $facet = \Drupal::routeMatch()->getParameter('facets_facet');
  $facet->setThirdPartySetting('facets_pretty_paths', 'coder', $coder);
  $facet->save();
}
