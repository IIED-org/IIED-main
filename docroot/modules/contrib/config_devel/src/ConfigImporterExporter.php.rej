***************
*** 12,17 ****
  use Drupal\Core\Config\StorageComparer;
  use Drupal\Core\Config\StorageInterface;
  use Drupal\Core\Config\TypedConfigManagerInterface;
  use Drupal\Core\Extension\ModuleHandlerInterface;
  use Drupal\Core\Extension\ModuleInstallerInterface;
  use Drupal\Core\Extension\ThemeHandlerInterface;
--- 12,18 ----
  use Drupal\Core\Config\StorageComparer;
  use Drupal\Core\Config\StorageInterface;
  use Drupal\Core\Config\TypedConfigManagerInterface;
+ use Drupal\Core\Extension\ModuleExtensionList;
  use Drupal\Core\Extension\ModuleHandlerInterface;
  use Drupal\Core\Extension\ModuleInstallerInterface;
  use Drupal\Core\Extension\ThemeHandlerInterface;
***************
*** 98,103 ****
     */
    protected $stringTranslation;
  
    /**
     * Creates a ConfigImporterExporter instance.
     *
--- 99,111 ----
     */
    protected $stringTranslation;
  
+   /**
+    * The module extension list service.
+    *
+    * @var \Drupal\Core\Extension\ModuleExtensionList
+    */
+   protected $moduleExtensionList;
+ 
    /**
     * Creates a ConfigImporterExporter instance.
     *
***************
*** 121,126 ****
     *   The theme handler.
     * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
     *   The string translation service.
     */
    public function __construct(
      ConfigFactoryInterface $config_factory,
--- 129,136 ----
     *   The theme handler.
     * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
     *   The string translation service.
+    * @param \Drupal\Core\Extension\ModuleExtensionList $module_extension_list
+    *   The module extension list service.
     */
    public function __construct(
      ConfigFactoryInterface $config_factory,
***************
*** 132,138 ****
      ModuleHandlerInterface $module_handler,
      ModuleInstallerInterface $module_installer,
      ThemeHandlerInterface $theme_handler,
-     TranslationInterface $string_translation
    ) {
      $this->configFactory = $config_factory;
      $this->configStorage = $config_storage;
--- 142,149 ----
      ModuleHandlerInterface $module_handler,
      ModuleInstallerInterface $module_installer,
      ThemeHandlerInterface $theme_handler,
+     TranslationInterface $string_translation,
+     ModuleExtensionList $module_extension_list
    ) {
      $this->configFactory = $config_factory;
      $this->configStorage = $config_storage;
***************
*** 144,149 ****
      $this->moduleInstaller = $module_installer;
      $this->themeHandler = $theme_handler;
      $this->stringTranslation = $string_translation;
    }
  
    /**
--- 155,161 ----
      $this->moduleInstaller = $module_installer;
      $this->themeHandler = $theme_handler;
      $this->stringTranslation = $string_translation;
+     $this->moduleExtensionList = $module_extension_list;
    }
  
    /**
***************
*** 193,199 ****
          $this->moduleHandler,
          $this->moduleInstaller,
          $this->themeHandler,
-         $this->stringTranslation
        );
  
        $config_importer->import();
--- 205,212 ----
          $this->moduleHandler,
          $this->moduleInstaller,
          $this->themeHandler,
+         $this->stringTranslation,
+         $this->moduleExtensionList
        );
  
        $config_importer->import();
***************
*** 253,259 ****
     * @return \Drupal\Core\Config\Entity\ConfigEntityStorageInterface
     */
    protected function getStorage($entity_type_id) {
-     return $this->configManager->getEntityManager()->getStorage($entity_type_id);
    }
  
    /**
--- 266,272 ----
     * @return \Drupal\Core\Config\Entity\ConfigEntityStorageInterface
     */
    protected function getStorage($entity_type_id) {
+     return $this->configManager->getEntityTypeManager()->getStorage($entity_type_id);
    }
  
    /**
