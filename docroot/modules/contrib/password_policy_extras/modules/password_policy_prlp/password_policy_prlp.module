<?php

/**
 * @file
 * Module file for the Password Policy PRLP module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;

/**
 * Implements hook_module_implements_alter().
 *
 * Make sure that our hooks are called AFTER Password Policy ones.
 * Sadly doesn't seem to work anymore, at least for form_alter hooks.
 */
function password_policy_prlp_module_implements_alter(&$implementations, $hook) {
  switch ($hook) {
    // Move our hook implementations to the end of the list.
    case 'form_user_pass_reset_alter':
    case 'form_alter':
      $implementation = $implementations['password_policy_prlp'];
      unset($implementations['password_policy_prlp']);
      $implementations['password_policy_prlp'] = $implementation;
      break;
  }
}

/**
 * Implements hook_form_alter().
 */
function password_policy_prlp_form_alter(array &$form, FormStateInterface $form_state) {
  // Do not remove.
  // Required for hook_form_user_pass_reset_alter correct execution ordering.
}

/**
 * Implements hook_form_FORM_ID_alter() for user_pass_reset().
 */
function password_policy_prlp_form_user_pass_reset_alter(&$form, FormStateInterface $form_state) {
  $uid = \Drupal::routeMatch()->getParameter('uid');
  $user = User::load($uid);
  if ($user && \Drupal::service('password_policy.validation_manager')->tableShouldBeVisible()) {

    _password_policy_extras_add_libraries_and_settings_to_form($form);

    // Adds the password status table to the reset pass form.
    $form['password_policy_status'] = _password_policy_extras_status_item(
      $form_state->getValue('pass', ''), $user, $user->getRoles());
    $form['password_policy_status']['#weight'] = -1;

    // Always display password status table even if the password is empty.
    unset($form['password_policy_status']['#states']);
  }
}
