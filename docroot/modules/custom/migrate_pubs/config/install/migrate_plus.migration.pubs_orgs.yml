# The machine name for a migration, used to uniquely identify it.
id: pubs_orgs

# A human-friendly description of the migration.
label: Import publishers from CSV file to taxonomy terms

# The machine name of the group containing this migration (which contains shared
# configuration to be merged with our own configuration here).
migration_group: pubs

# The category or tag for the migration.
migration_tags:
  - orgs

# Every migration must have a source plugin, which controls the delivery of our
# source data.
source:
  plugin: csv
  # Full path to the file.
  path: '/Users/chris/Downloads/Publishers and organisations - Valid publishers list to import.csv'
  # Column delimiter. Comma (,) by default.
  ids: [id]
  delimiter: ','
  # Field enclosure. Double quotation marks (") by default.
  enclosure: '"'
  # The number of rows at the beginning which are not data.
  header_row_count: 1
  # The column(s) to use as a key. Each column specified will
  # create an index in the migration table and too many columns
  # may throw an index size error.
  # Here we identify the columns of interest in the source file.
  # Each numeric key is the 0-based index of the column.
  # For each column, the key below is the field name assigned to
  # the data on import, to be used in field mappings below.
  # The value is a user-friendly string for display by the
  # migration UI.
# Here's the meat of the migration - the processing pipeline. This describes how
# each destination field is to be populated based on the source data. For each
# destination field, one or more process plugins may be invoked.
process:
  name: Name
  field_full_name: 'Full name'
  field_location_legacy: Location
  field_url/uri: URL
  field_valid:
    plugin: default_value
    default_value: true
  vid:
    plugin: default_value
    default_value: organisation

destination:
  plugin: entity:taxonomy_term

# We'll learn more about dependencies in beer_node - here, we leave them empty.
migration_dependencies: {}

# By default, configuration entities (like this migration) are not automatically
# removed when the migration which installed them is uninstalled. To have your
# migrations uninstalled with your migration module, add an enforced dependency
# on your module.
dependencies:
  enforced:
    module:
      - migrate_pubs
