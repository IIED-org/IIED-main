<?php

/**
 * @file
 * Module for altering the migration source properties in prepareRow().
 */

use Drupal\migrate\Plugin\MigrationInterface;
use Drupal\migrate\Plugin\MigrateSourceInterface;
use Drupal\migrate\Row;

/**
 * Implements hook_migrate_prepare_row().
 */
function iied_migrate_d7_migrate_prepare_row(Row $row, MigrateSourceInterface $source, MigrationInterface $migration) {

  $themes_migrations = [
    'iied_d7_projects',
    'iied_d7_articles',
    'iied_d7_blogs',
    'iied_d7_events',
    'iied_d7_news_media',
  ];
  if (in_array($migration->id(), $themes_migrations) ) {
    // Themes are already in the pubs site, so quickest to simply map the term
    // ids for now.
    $themes_map = [
      '648' => '4436', // Biodiversity
      '642' => '4441', // Climate change
      '1553' => '4446', // Communication
      '1843' => '4451', // Drylands and pastoralism
      '634' => '4456', // Economics
      '653' => '4461', // Energy
      '2137' => '4466', // Fisheries
      '651' => '4471', // Food and agriculture
      '643' => '4476', // Forests
      '1269' => '4481', // Gender
      '645' => '4486', // Governance
      '647' => '4491', // Green economy
      '649' => '4496', // Land acquisitions and rights
      '652' => '4501', // Law
      '2491' => '4546', // Monitoring, evaluation and learning
      '646' => '4506', // Natural resource management
      '1268' => '4516', // Policy and planning
      '635' => '4521', // Poverty
      '633' => '4531', // Sustainable markets
      '641' => '4536', // Urban
      '644' => '4541', // Water
    ];
    // Get the source terms array.
    $theme_terms = $row->getSourceProperty('taxonomy_vocabulary_19');
    if (is_array($theme_terms)) {
      foreach ($theme_terms as $key => $term) {
        $new_terms[$key]['tid'] = $themes_map[$term['tid']];
      }
      // Set the new mapped values
      $row->setSourceProperty('taxonomy_vocabulary_19', $new_terms);
    }

    // Tags
    $tags_terms = $row->getSourceProperty('taxonomy_vocabulary_15');
    $new_tags = [];
    if (is_array($tags_terms)) {
      foreach ($tags_terms as $key => $term) {
        // Look up the mapped id from the migrate_map_iied_tags table.
        $db = \Drupal\Core\Database\Database::getConnection();
        $query = $db->select('migrate_map_iied_tags', 'mm');
        $query->fields('mm', array('destid1'));
        $query->condition('sourceid1', "https://www.iied.org/taxonomy/term/" . $term['tid']);
        $new_tag = $query->execute()->fetchField();
        // Not all tags have been migrated.
        // @todo - check if we can re-run tags migration first.
        if ($new_tag) {
          $new_tags[$key]['tid'] = $new_tag;
        }
      }
      // Set the new mapped values
      $row->setSourceProperty('taxonomy_vocabulary_15', $new_tags);
    }

    // Use user reference to look up user name to map to the person taxonomy.
    // $project_contacts = [];
    // $project_contacts = $row->getSourceProperty('field_project_contact');
    // if ($project_contacts && count($project_contacts)) {
    //   foreach ($project_contacts as $project_contact) {
    //     $user_id = $project_contact['target_id'];
    //         $author_name = $source->getDatabase()->query('SELECT name FROM {users} WHERE uid = :uid', array(':uid' => $user_id))->fetchField();
    //       $row->setSourceProperty('field_project_contact', $author_name);
    //   }
    // }
  }

  // iied_d7_field_paragraphs, ignoring some paragraphs.
  if ($migration->id() == 'iied_d7_field_paragraphs') {
    $x = ''; // Useful for debugging.
    $paragraphs_to_ignore = [
      'colorbox_gallery',
      'colorbox_gallery_thumbnails',
    ];
    if (in_array($row->getSourceProperty('bundle'), $paragraphs_to_ignore)) {
      return FALSE;
    }
    if ($row->getSourceProperty('bundle') == 'video_embed_standard') {
      // We are not meant to be using video_embed_standard, but there are a few
      // paragraphs of this type use in articles. They can be migrated to the
      // video_embed paragraph, which has the same fields.
      $row->setSourceProperty('bundle', 'video_embed');
    }
    if ($row->getSourceProperty('bundle') == 'related_link') {
      $url = $row->getSourceProperty('field_related_link_url');
      $title = $row->getSourceProperty('field_related_link_title');
      $related_link_processed[0] = [
        'url' => trim($url),
        'title' => $title,
        'attributes' => '',
      ];
      $row->setSourceProperty('related_link_processed', $related_link_processed);
    }
  }

  // iied_d7_blogs migration. We need to lookup person terms to reference as
  // authors rather than the original user reference.
  if ($migration->id() == 'iied_d7_blogs') {

    $blog_authors = [];
    $author_names = [];
    $author_uid = $row->getSourceProperty('node_uid');
    if ($author_uid) {
      $blog_authors[] = $author_uid;
    }
    $second_authors = $row->getSourceProperty('field_second_author');
    if ($second_authors && count($second_authors)) {
      foreach ($second_authors as $second_author) {
        $blog_authors[] = $second_author['target_id'];
      }
    }
    foreach ($blog_authors as $blog_author) {
      $author_names[] = $source->getDatabase()->query('SELECT name FROM {users} WHERE uid = :uid', array(':uid' => $blog_author))->fetchField();
    }
    $row->setSourceProperty('field_authors', $author_names);

  }

  // iied_d7_terms_person migration, users migrating to the person taxonomy.
  if ($migration->id() == 'iied_d7_terms_person') {
    $name = $row->getSourceProperty('name');
    $term = taxonomy_term_load_multiple_by_name($name, $vocabulary = 'person');
    if (count($term)) {
      $tid = array_key_first($term);
      $row->setSourceProperty('tid', $tid);
    }
    $researcher_profiles = $row->getSourceProperty('field_researcher_profiles');
    $x=0;
  }

  // iied_d7_projects migration.
  if ($migration->id() == 'iied_d7_projects') {
    if ($row->getSourceProperty('nid') == "14066") {
      // For node 14066 we were seeing the error on migration:
      //   Array index missing, extraction failed for
      //   'array( 'id' => '873', 'revision_id' => '874', )'.
      //   Consider adding a `default` key to the configuration.
      //
      // I think this is due to an empty paragraph on the
      // field_full_width_media field, so here we simply set that source
      // property to an empty array, which seems to solve the issue.
      $row->setSourceProperty('field_full_width_media', []);
    }
  }
  // iied_d7_events migration.
  if ($migration->id() == 'iied_d7_events') {
    $x = 0;
  }
  // iied_d7_news_media migration.
  if ($migration->id() == 'iied_d7_news_media') {
    // Source node 3979 is giving an error, which seems to be referencing a
    // project id 4554 which does not seem to exist.
    if ($row->getSourceProperty('nid') == '3979') {
      $project = $row->getSourceProperty('field_project_number_reference');
      if (is_array($project) && $project[0]['target_id'] == '4554') {
        $row->setSourceProperty('field_project_number_reference', []);
      }
    }
  }
  //iied_d7_person_para_researcher_profiles
  if ($migration->id() == 'iied_d7_person_para_researcher_profiles') {
    $url = $row->getSourceProperty('field_link_value');
    $field_link_processed[0] = [
      'url' => trim($url),
      'title' => '',
      'attributes' => '',
    ];
    $row->setSourceProperty('field_link_processed', $field_link_processed);
  }
}
